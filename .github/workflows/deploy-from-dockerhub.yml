name: deploy-from-dockerhub
# Reusable workflow for deploying to the dev or stg servers.
# Called by the main CI/CD pipeline .yml file as needed.

on:
  workflow_call:
    inputs:
      RUNNER_NAME:
        required: true
        type: string
      DOMAIN:
        required: true
        type: string
      IMAGE_TAG:
        required: true
        type: string      
env:
  DOMAIN:    "${{ inputs.DOMAIN }}"
  IMAGE_TAG: "${{ inputs.IMAGE_TAG }}"
jobs:
  deploy-from-dockerhub:
    runs-on: [self-hosted, '${{ inputs.RUNNER_NAME }}']
    timeout-minutes: 60
    steps:
    - name: Checkout this code
      uses: actions/checkout@v3
      # Checkout the code, not into a container, because all work here is not in a container
      with:
        fetch-depth: 50
    - name: Copy server's existing config file into local path before deployment
      run:  |
        cp /var/hhahaiti/.env ./.env
    - name: Pull docker images from Docker Hub
      run:  |
        docker compose -f docker-compose.yml -f docker-compose.deploy.yml pull
    - name: Launch the server
      run:  |
        docker compose -f docker-compose.yml -f docker-compose.deploy.yml up -d
    - name: Cleanup unused docker images
      run:  |
        docker image prune -f
    # - name: Apply migrations (once server is up)
    #   run:  |
    #     bash -c 'sleep 15'
    #     docker exec cbr_django python manage.py migrate
    - name: View state at end of deployment script
      run:  |
        docker images
        docker ps -a
        docker volume ls
        echo "::notice file=deploy-form-dockerhub.yml::Deployed image $IMAGE_TAG to $DOMAIN using runner ${{ inputs.runner_name}}"