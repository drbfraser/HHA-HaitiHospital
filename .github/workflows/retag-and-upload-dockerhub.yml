name: retag-and-upload-dockerhub
# Reusable workflow for retagging an existing dockerhub image with a new name.
# Called by the main CI/CD pipeline .yml file as needed.

on:
  workflow_call:
    inputs:
      IMAGE_TAG:
        required: true
        type: string
      BRANCH_TAG:
        required: true
        type: string
    secrets:
      HUB_USER:
        required: true
      HUB_REPO_BACKEND:
        required: true
      HUB_REPO_FRONTEND:
        required: true
      HUB_TOKEN:
        required: true
env:
  HUB_USER: "${{ secrets.HUB_USER }}"
  HUB_REPO_BACKEND: "${{ secrets.HUB_REPO_BACKEND }}"
  HUB_REPO_FRONTEND: "${{ secrets.HUB_REPO_FRONTEND }}"
  HUB_TOKEN: "${{ secrets.HUB_TOKEN }}"
jobs:
  retag-and-upload-dockerhub:
    runs-on: [self-hosted, docker]
    timeout-minutes: 60
    steps:
    - name: Trying to tag images of version '${{ inputs.IMAGE_TAG }}' with new tag '${{ inputs.BRANCH_TAG }}'
      run: |
        echo "Trying to tag images of version '${{ inputs.IMAGE_TAG }}' with new tag '${{ inputs.BRANCH_TAG }}'"
        echo "If you get 'Error response from daemon - manifest for ... not found - manifest unknown - manifest unknown'"
        echo "   it likely means the pipeline did not build and deploy a docker image for this commit."
        echo "   Was there a MR to this branch that did not get build for use on Dev server?"
        echo "Downloading image = $HUB_USER/$HUB_REPO_BACKEND, tag = ${{ inputs.IMAGE_TAG }}'..."
    - name: Pulling images
      run: |        
        docker pull $HUB_USER/$HUB_REPO_BACKEND:${{ inputs.IMAGE_TAG }}
        docker pull $HUB_USER/$HUB_REPO_FRONTEND:${{ inputs.IMAGE_TAG }}
    - name: Re-tag images
      run: |        
        docker tag $HUB_USER/$HUB_REPO_BACKEND:${{ inputs.IMAGE_TAG }}   $HUB_USER/$HUB_REPO_BACKEND:${{ inputs.BRANCH_TAG }}
        docker tag $HUB_USER/$HUB_REPO_FRONTEND:${{ inputs.IMAGE_TAG }}  $HUB_USER/$HUB_REPO_FRONTEND:${{ inputs.BRANCH_TAG }}
        docker images
    - name: Push re-tagged images to docker hub
      run: |        
        docker login -u $HUB_USER -p $HUB_TOKEN
        docker push $HUB_USER/$HUB_REPO_BACKEND:${{ inputs.BRANCH_TAG }}
        docker push $HUB_USER/$HUB_REPO_FRONTEND:${{ inputs.BRANCH_TAG }}
        docker logout
    - name: Cleanup
      run: |        
        docker rmi $HUB_USER/$HUB_REPO_BACKEND:${{ inputs.BRANCH_TAG }} || true
        docker rmi $HUB_USER/$HUB_REPO_FRONTEND:${{ inputs.BRANCH_TAG }} || true
        docker rmi $HUB_USER/$HUB_REPO_BACKEND:${{ inputs.IMAGE_TAG }} || true
        docker rmi $HUB_USER/$HUB_REPO_FRONTEND:${{ inputs.IMAGE_TAG }} || true
        docker images