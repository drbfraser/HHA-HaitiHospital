variables:
  MONGO_URI: 'mongodb://mongo:27017/hhahaiti'
  PASSWORD_SEED: 'catdog'
  IS_GITLAB_CI: 'true'
stages:
  - validate
  - build-dependencies
  - test-dependencies
  - build
  - build-docker
  - deploy
validate-prettier:
  stage: validate
  image: node:16
  tags:
    - docker
  only:
    - master
    - staging
    - merge_requests
  before_script:
    - npm ci
  script:
    - npm run check-format
test-build-common:
  stage: build-dependencies
  image: node:16
  tags:
    - docker
  only:
    - master
    - staging
    - merge_requests
  before_script:
    - cd common
    - npm ci
  script:
    - npm run test
    - npm run build
  after_script:
    - cd common && tar -czf ../common_build.tar.gz .
  artifacts:
    expire_in: 1 week
    paths:
      - common_build.tar.gz
test-build-server:
  services:
    - mongo:5.0.14-focal
  stage: build
  image: node:16
  tags:
    - docker
  only:
    - master
    - staging
    - merge_requests
  before_script:
    - cd server
    - npm ci
    - npm install ../common_build.tar.gz
    - npm run seed
  script:
    - npm run test
  after_script:
    - cd server && tar -czf ../server_build.tar.gz .
  artifacts:
    expire_in: 1 week
    paths:
      - server_build.tar.gz

build-client:
  stage: build
  image: node:16
  tags:
    - docker
  only:
    - master
    - staging
    - merge_requests
  before_script:
    - cd client
    - npm ci
    - npm install ../common_build.tar.gz
  script:
    # TODO: remove "CI=false", temporarily required because the project has warnings during the build
    - CI=false GENERATE_SOURCEMAP=false npm run build
  after_script:
    - cd client/build && tar -czvf ../../client_build.tar.gz .
  artifacts:
    expire_in: 1 week
    paths:
      - client_build.tar.gz

.deploy-script: &export_image_tag
  # Set IMAGE_TAG to encode the date and SHA of the most recent commit.
  - export IMAGE_TAG=v$(git show -s --format=%cs $CI_COMMIT_SHA).`git rev-parse --short=8 $CI_COMMIT_SHA`
  # Display some useful info for understanding / debugging the pipeline
  - echo "Docker hub user ='$HUB_USER',     version='$IMAGE_TAG'"
  - echo "Full tag (backend) is               = $HUB_USER/$HUB_REPO_BACKEND:$IMAGE_TAG"
  - echo "Full tag (rev-proxy & frontend) is  = $HUB_USER/$HUB_REPO_FRONTEND:$IMAGE_TAG"
  - docker images

build-docker publish-docker-images:
  stage: build-docker
  tags:
    - docker
  script:
    - apk add --update git docker
    # Required environment variables defined by GitLab's settings:
    #   HUB_USER:           Docker Hub user
    #   HUB_TOKEN:          Docker Hub token
    #   HUB_REPO_BACKEND:   Docker Hub project name for backend
    #   HUB_REPO_FRONTEND:  Docker Hub project name for frontend / caddy
    # Set IMAGE_TAG to encode the date and SHA of the most recent commit.
    - *export_image_tag
    # Build images (tagged by docker-composition*.yml using IMAGE_TAG)
    - docker compose -f docker-compose.yml -f docker-compose.deploy.yml build

    # Push images to Docker Hub
    - docker images
    - docker login -u $HUB_USER -p $HUB_TOKEN
    - docker push $HUB_USER/$HUB_REPO_BACKEND:$IMAGE_TAG
    - docker push $HUB_USER/$HUB_REPO_FRONTEND:$IMAGE_TAG
    - docker logout

    # Cleanup the image and any tags of that image
    # Run on the CI/CD server, so it can force delete these images because it does not run any of them as containers
    - docker images -a | grep -e "$HUB_REPO_BACKEND" -e "$HUB_REPO_FRONTEND" | awk '{print $3}' |
      xargs docker rmi --force
    - docker images

.deploy-script: &deploy-script
  - cp /var/hhahaiti/.env ./.env
  - docker-compose -f docker-compose.yml -f docker-compose.deploy.yml build
  - docker-compose -f docker-compose.yml -f docker-compose.deploy.yml up --force-recreate -d
  - docker image prune -f # remove unused images since we just built new ones

deploy-development:
  stage: deploy
  environment:
    name: development
    url: https://hhahaiti-dev.cmpt.sfu.ca
  tags:
    - deploy-development
  only:
    - master
  script:
    - *deploy-script

deploy-staging:
  stage: deploy
  environment:
    name: staging
    url: https://hhahaiti-stg.cmpt.sfu.ca
  tags:
    - deploy-staging
  only:
    - staging
  script:
    - *deploy-script
