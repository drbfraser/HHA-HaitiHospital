stages:
  - build
  - deploy

build server:
  stage: build
  image: node:16
  tags:
    - docker
  only:
    - master
    - staging
    - merge_requests
  before_script:
    - cd server
    - npm ci
  script:
    - npm run build
  after_script:
    - cd server && tar -czf ../server_build.tar.gz .
    - npm run clean
  artifacts:
    expire_in: 1 week
    paths:
      - server_build.tar.gz

build client:
  stage: build
  image: node:16
  tags:
    - docker
  only:
    - master
    - staging
    - merge_requests
  before_script:
    - cd client
    - npm ci
  script:
    # TODO: remove "CI=false", temporarily required because the project has warnings during the build
    - CI=false GENERATE_SOURCEMAP=false npm run build
  after_script:
    - cd client/build && tar -czvf ../../client_build.tar.gz .
    - npm run clean
  artifacts:
    expire_in: 1 week
    paths:
      - client_build.tar.gz

.deploy-script: &deploy-script
  - cp /var/hhahaiti/.env ./.env
  - docker-compose -f docker-compose.yml -f docker-compose.deploy.yml build
  - docker-compose -f docker-compose.yml -f docker-compose.deploy.yml up --force-recreate -d
  - docker image prune -f # remove unused images since we just built new ones

deploy development:
  stage: deploy
  environment:
    name: development
    url: https://hhahaiti-dev.cmpt.sfu.ca
  tags:
    - deploy-development
  only:
    - master
  script:
    - *deploy-script

deploy staging:
  stage: deploy
  environment:
    name: staging
    url: https://hhahaiti-stg.cmpt.sfu.ca
  tags:
    - deploy-staging
  only:
    - staging
  script:
    - *deploy-script
